openapi: 3.0.1
info:
  title: Localing Gateway API
  description: Localing Gateway API
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Localing Gateway API 
    description: for Business, Consumer, Product and Order Data
  - name: Specification
    description: The swagger API specification

paths:
  /business:
    get:
      tags:
        - Business
      description: Fetch all businesses
      responses:
        200:
          description: Return all businesses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
        4XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /business/{id}:
    get:
      tags:
        - Business
      parameters:
        - name: id
          in: path
          description: The id of the business to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the business with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        4XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /consumer:
    get:
      tags:
        - Consumer
      description: Fetch all consumers
      responses:
        200:
          description: Return all consumers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
        4XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /consumer/{id}:
    get:
      tags:
        - Consumer
      parameters:
        - name: id
          in: path
          description: The id of the consumer to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the consumer with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        4XX:
          description: Consumer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Consumer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{businessId}:
    get:
      tags:
        - Product
      parameters:
        - name: businessId
          in: path
          description: The id of the business to fetch products for
          required: true
          schema:
            type: string
      description: Fetch all products for a business
      responses:
        200:
          description: Return all products for a business
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        4XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{businessId}/{productId}:
    get:
      tags:
        - Product
      parameters:
        - name: businessId
          in: path
          description: The id of the business to fetch product from
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: The id of the product
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the product with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        4XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /checkout:
    post:
      tags:
        - Checkout
      summary: Check out a cart

      requestBody:
        description: A cart
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'

      responses:
        200:
          description: Checkout successful

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}

components:
  schemas:

    AnyValue: {}

    Business:
      type: object
      properties:
        businessId:
          type: string
        paymentAccountId:
          type: string
        email:
          type: string
        active:
          type: string
        name: 
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            type: string
        latitude:
          type: number
        longitude:
          type: number
        area:
          type: string
        address:
          type: string
        imageURL:
          type: string
        website:
          type: string
        phone:
          type: string

    Consumer:
      type: object
      properties:
        consumerId: 
          type: string
        email:
          type: string

    Product:
      type: object
      properties:
          active:
            type: boolean
          businessId:
            type: string
          currency:
            type: string
          description:
            type: string
          images:
            type: array
            items:
              type: string
          name:
            type: string
          price:
            type: number
          productId:
            type: string

    Cart:
      type: object
      properties:
        consumerId:
          type: string
        vendorCarts:
          type: array
              
    Error:
      type: object
      additionalProperties: true