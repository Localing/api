openapi: 3.0.1
info:
  title: Localing Gateway API
  description: Localing Gateway API
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Localing Gateway API 
    description: for Business, Consumer, Product and Order Data
  - name: Specification
    description: The swagger API specification

paths:
  /business:
    get:
      tags:
        - Business
      summary: Get all businesses
      description: Fetches all businesses
      responses:
        200:
          description: All businesses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessAccount'
        4XX:
          description: Businesses not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching businesses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /business/{businessId}:
    get:
      tags:
        - Business
      summary: Get a business by id
      parameters:
        - name: id
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the business with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessAccount'
        4XX:
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /businessaccount:
    get:
      tags:
        - BusinessAccount
      summary: Get all business accounts
      description: Fetch all business accounts
      responses:
        200:
          description: All business accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessAccount'
        4XX:
          description: Business accounts not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching business accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /businessaccount/{businessId}:
    get:
      tags:
        - BusinessAccount
      summary: Get a business account by id
      parameters:
        - name: id
          in: path
          description: The id of the business account
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the business account with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessAccount'
        4XX:
          description: Business account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching business account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consumeraccount:
    get:
      tags:
        - ConsumerAccount
      summary: Get all consumer accounts
      description: Fetch all consumer accounts
      responses:
        200:
          description: Return all consumer accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerAccount'
        4XX:
          description: Consumer accounts not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching consumer accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consumeraccount/{consumerId}:
    get:
      tags:
        - ConsumerAccount
      summary: Get a consumer account by id
      parameters:
        - name: id
          in: path
          description: The id of the consumer account to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the consumer with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerAccount'
        4XX:
          description: Consumer account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error fetching consumer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /product/{businessId}:
    get:
      tags:
        - Product
      summary: Get all products for a business
      parameters:
        - name: businessId
          in: path
          description: The id of the business to fetch products for
          required: true
          schema:
            type: string
      description: Fetch all products for a business
      responses:
        200:
          description: Return all products for a business
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        4XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Product
      summary: Add a new product to a business

      requestBody:
        description: A product
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

      responses:
        200:
          description: Product added successfully
        4XX:
          description: Error adding product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error adding product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /product/{businessId}/{productId}:
    parameters:
    - name: businessId
      in: path
      description: The id of the business
      required: true
      schema:
        type: string
    - name: productId
      in: path
      description: The id of the product
      required: true
      schema:
        type: string
    get:
      tags:
        - Product
      summary: Get a product from a business
      responses:
        200:
          description: Return the product with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        4XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Product
      summary: Update a product by id

      requestBody:
        description: An updated product
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

      responses:
        200:
          description: Product updated successfully
        4XX:
          description: Error updating product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Error updating product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Product
      summary: Delete a product
      responses:
        '204':
          description: Product deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
               
  /checkout:
    post:
      tags:
        - Checkout
      summary: Check out a cart

      requestBody:
        description: A cart
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'

      responses:
        200:
          description: Checkout successful

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}

components:
  schemas:

    BusinessAccount:
      type: object
      properties:
        businessId:
          type: string
        paymentAccountId:
          type: string
        email:
          type: string
        active:
          type: string
        name: 
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            type: string
        latitude:
          type: number
        longitude:
          type: number
        area:
          type: string
        address:
          type: string
        imageURL:
          type: string
        website:
          type: string
        phone:
          type: string

    ConsumerAccount:
      type: object
      properties:
        consumerId: 
          type: string
        email:
          type: string

    Product:
      type: object
      properties:
          active:
            type: boolean
          businessId:
            type: string
          currency:
            type: string
          description:
            type: string
          images:
            type: array
            items:
              type: string
          name:
            type: string
          price:
            type: number
          productId:
            type: string

    Cart:
      type: object
      properties:
        consumerId:
          type: string
        vendorCarts:
          type: array
              
    Error:
      type: object
      additionalProperties: true